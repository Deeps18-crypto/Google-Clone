{"version":3,"sources":["StateProvider.js","reducer.js","Pages/Search.js","Pages/Home.js","keys.js","useGoogleSearch.js","Pages/SearchPage.js","App.js","registerServiceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hidebutton","useState","input","setinput","dispatch","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","classsName","path","Avatar","src","alt","API_KEY","useGoogleSearch","data","setdata","useEffect","a","fetch","then","response","json","result","fetchdata","SearchPage","to","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4afe2aaa.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\nexport const useStateValue = () => useContext(StateContext);\r\n","export const initialState = {\r\n  term: \"\",\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_SEARCH_TERM: \"SET_SEARCH_TERM \",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case actionTypes.SET_SEARCH_TERM:\r\n      return {\r\n        ...state, \r\n        term: action.term,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import React, { useState } from \"react\";\r\nimport \"./Search.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { actionTypes } from \"../reducer\";\r\n\r\nfunction Search({ hidebutton = false }) {\r\n  const [input, setinput] = useState(\"\");\r\n  const [{}, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"YOu hit the seach button\", input);\r\n    history.push(\"/search\");\r\n\r\n    dispatch({\r\n      type: actionTypes.SET_SEARCH_TERM,\r\n      term: input,\r\n    });\r\n  };\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"search__input\">\r\n        <SearchIcon />\r\n        <input value={input} onChange={(e) => setinput(e.target.value)} />\r\n        <MicIcon />\r\n      </div>\r\n      {!hidebutton ? (\r\n        <div className=\"search__button\">\r\n          <Button type=\"submit \" onClick={search} variant=\"outlined\">\r\n            Google Search\r\n          </Button>\r\n          <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"search__button\">\r\n          <Button\r\n            className=\"search__buttonHidden\"\r\n            type=\"submit \"\r\n            onClick={search}\r\n            variant=\"outlined\"\r\n          >\r\n            Google Search\r\n          </Button>\r\n          <Button className=\"search__buttonHidden\" variant=\"outlined\">\r\n            I'm Feeling Lucky\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Search from \"./Search\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div classsName=\"home\">\r\n      <div className=\"home__header\">\r\n        <div className=\"home__headerLeft\">\r\n          <Link path=\"/about\">About</Link>\r\n          <Link path=\"/store\">Store</Link>\r\n        </div>\r\n        <div className=\"home__headerRight\">\r\n          <Link path=\"/image\">Image</Link>\r\n          <Link path=\"/Search\">Search</Link>\r\n          <AppsIcon />\r\n          <Avatar />\r\n        </div>\r\n      </div>\r\n      <div className=\"home__body\">\r\n        <img\r\n          src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"home__input\">\r\n        <Search />\r\n        \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","export const API_KEY = \"AIzaSyDy2TkZQ6A28IllqRALqa8DcWaZ7OWDzmo\";\r\n\r\nexport default API_KEY;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport API_KEY from \"./keys\";\r\nimport axios from \"axios\"\r\n\r\nconst CONTEXT_KEY = \"88cfa81aca9eed393\";\r\n\r\nfunction useGoogleSearch(term) {\r\n  const [data, setdata] = useState(null);\r\n\r\n  useEffect(() => {\r\n  //   async function fetchdata() {\r\n  //     const request = await axios\r\n  //       .get(\r\n  //         `https://www.googleapis.com/customsearch/vi?key=\r\n  //         ${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n  //       )\r\n  //       .then((response) => response.json());\r\n  //     setdata(request);\r\n  //   }\r\n  //   fetchdata();\r\n  // }, [term]);\r\n  async function fetchdata() {\r\n    fetch(\r\n        `https://www.googleapis.com/customsearch/v1?key=\r\n        ${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n      )\r\n      .then((response) => response.json())\r\n      .then((result)=> {\r\n        setdata(result)\r\n      })\r\n  }\r\n  fetchdata();\r\n}, [term]);\r\n  return { data };\r\n}\r\n\r\nexport default useGoogleSearch;\r\n","import React from \"react\";\r\nimport \"./SearchPage.css\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport useGoogleSearch from \"../useGoogleSearch\";\r\nimport Response from \"../response\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"./Search\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nfunction SearchPage() {\r\n  const [{ term }, dispatch] = useStateValue();\r\n  const { data } = useGoogleSearch(term);\r\n\r\n  //Mock data\r\n  // const data = Response;\r\n\r\n  // https://developers.google.com/custom-search/v1/introduction#identify_your_application_to_google_with_api_key\r\n  //  https://cse.google.com/cse/create/new\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className=\"searchPage\">\r\n      <div className=\"searchPage__header\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"searchPage__image\"\r\n            src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n          />\r\n        </Link>\r\n        <div className=\"searchPage__headerBody\">\r\n          <Search hidebutton />\r\n          <div className=\"searchPage__options\">\r\n            <div className=\"searchPage__optionsLeft\">\r\n              <div className=\"searchPage__option\">\r\n                <SearchIcon />\r\n                <Link to=\"/all\">All</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <DescriptionIcon />\r\n                <Link to=\"/news\">News</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <ImageIcon />\r\n                <Link to=\"/images\">Images</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <LocalOfferIcon />\r\n                <Link to=\"/shoppping\">shopping</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <RoomIcon />\r\n                <Link to=\"/maps\">maps</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <MoreVertIcon />\r\n                <Link to=\"/more\">more</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"searchPage__optionsRight\">\r\n              <div className=\"searchPage__option\">\r\n                <Link to=\"/setting\">Setting</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <Link to=\"/tools\">Tools</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {term && (\r\n        <div className=\"searchPage__results\">\r\n          <p className=\"searchPage__resultCount\">\r\n            About {data?.searchInformation.formattedTotalResults} results (\r\n            {data?.searchInformation.formattedSearchTime}) seconds for {term}\r\n          </p>\r\n          {data?.items.map((item) => (\r\n            <div className=\"searchPage__results\">\r\n              <a href={item.link}>\r\n                {item.pagemap?.cse_image?.length > 0 &&\r\n                  item.pagemap?.cse_image[0]?.src && (\r\n                    <img\r\n                      className=\"searchPage_resultImage\"\r\n                      src={\r\n                        item.pagemap?.cse_image?.length > 0 &&\r\n                        item.pagemap?.cse_image[0]?.src\r\n                      }\r\n                      alt=\"\"\r\n                    />\r\n                  )}\r\n                {item.displayLink}\r\n              </a>\r\n              <a className=\"searchPage__resultTitle\" href={item.link}>\r\n                <h2>{item.title}</h2>\r\n              </a>\r\n              <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport SearchPage from \"./Pages/SearchPage\"\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/search\">\n              <SearchPage/>\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducer, { initialState } from \"./reducer\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport {StateProvider} from \"./StateProvider\";\n\nReactDOM.render(\n  <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n  </StateProvider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}